# Automate, customize, and execute your software development workflows right in your repository with GitHub Actions.
# Documentation: https://docs.github.com/en/actions

name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]

    steps:

    - uses: actions/checkout@v2.4.0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.5.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load cached dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          **/node_modules
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      id: install-dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Fix code style linting errors
      id: lint-fix
      run: npm run lint:fix
      continue-on-error: true

    - name: Commit fixed linting errors
      id: commit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "ci: fix code style linting errors"

    - name: Lint code
      id: lint
      run: npm run lint

  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
        - 6379/tcp
        options: --entrypoint redis-server

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    strategy:
      matrix:
        node-version: [16]

    steps:

    - uses: actions/checkout@v2.4.0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.5.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load cached dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          **/node_modules
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      id: install-dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - uses: microsoft/playwright-github-action@v1

    - name: Run tests
      id: test
      run: npm run test
      env:
        REDIS_HOST: localhost
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}

    - name: Send Slack notifications
      uses: act10ns/slack@v1
      if: failure()
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#hocuspocus-notifications'

  build:
    runs-on: ubuntu-latest

    needs: lint

    strategy:
      matrix:
        node-version: [16]

    steps:

    - uses: actions/checkout@v2.4.0

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.5.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Load cached dependencies
      uses: actions/cache@v2.1.5
      id: cache
      with:
        path: |
          **/node_modules
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      id: install-dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Try to build the packages
      id: build-packages
      run: npm run build:packages
